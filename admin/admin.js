import { db, ref, set, onValue, remove, update, serverTimestamp } from '../firebase.js';

let allUsers = {}; // Firebase ‡¶•‡ßá‡¶ï‡ßá ‡¶Ü‡¶∏‡¶æ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶§ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá

// Firebase ‡¶•‡ßá‡¶ï‡ßá ‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶≤-‡¶ü‡¶æ‡¶á‡¶Æ ‡¶°‡ßá‡¶ü‡¶æ ‡¶∂‡ßã‡¶®‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
const usersRef = ref(db, 'users/');
onValue(usersRef, (snapshot) => {
  const data = snapshot.val();
  allUsers = data || {}; // ‡¶°‡ßá‡¶ü‡¶æ ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶ñ‡¶æ‡¶≤‡¶ø ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü
  renderUsers(); // ‡¶°‡ßá‡¶ü‡¶æ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶π‡¶≤‡ßá‡¶á ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ‡¶ü‡¶ø ‡¶™‡ßÅ‡¶®‡¶∞‡¶æ‡¶Ø‡¶º ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞ ‡¶π‡¶¨‡ßá
});

// ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
function renderUsers() {
  const list = document.getElementById("usersList");
  const filter = document.getElementById("searchBox").value.toLowerCase();
  list.innerHTML = "";

  if (!allUsers) return; // ‡¶Ø‡¶¶‡¶ø ‡¶ï‡ßã‡¶®‡ßã ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá

  // ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶¶‡ßá‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶∏‡¶æ‡¶ú‡¶æ‡¶®‡ßã (‡¶®‡¶§‡ßÅ‡¶®‡¶ó‡ßÅ‡¶≤‡ßã ‡¶Ü‡¶ó‡ßá)
  const sortedUserIds = Object.keys(allUsers).sort((a, b) => {
    const timeA = allUsers[a].createdAt || 0;
    const timeB = allUsers[b].createdAt || 0;
    return timeB - timeA;
  });

  for (const id of sortedUserIds) {
    const user = allUsers[id];
    if (id.toLowerCase().includes(filter) || user.name.toLowerCase().includes(filter)) {
      const div = document.createElement("div");
      div.className = "user-card";
      const progress = ((user.count || 0) / 5) * 100;

      div.innerHTML = `
        <strong>${user.name}</strong> (ID: ${id})<br/>
        Car: ${user.car || "üöó"}<br/>
        Wash Count: ${user.count || 0}
        <div class="progress-bar"><div class="progress-fill" style="width: ${progress}%"></div></div>
        <div class="flex">
          <button onclick="incrementWash('${id}')">+1 Wash</button>
          <button onclick="deleteUser('${id}')">Delete</button>
        </div>
      `;
      list.appendChild(div);
    }
  }
}

// ‡¶®‡¶§‡ßÅ‡¶® ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
async function createUser() {
  const id = document.getElementById("newUserId").value.trim();
  const name = document.getElementById("newUserName").value.trim();
  const car = document.getElementById("newUserCar").value;

  if (!id || !name) {
    alert("Please enter both User ID and User Name.");
    return;
  }

  // ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶Ü‡¶á‡¶°‡¶ø ‡¶Ü‡¶ó‡ßá ‡¶•‡ßá‡¶ï‡ßá‡¶á ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ
  if (allUsers[id]) {
    alert("User ID already exists!");
    return;
  }

  try {
    // Firebase ‡¶è ‡¶°‡ßá‡¶ü‡¶æ ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
    await set(ref(db, 'users/' + id), {
      name: name,
      car: car,
      count: 0,
      createdAt: serverTimestamp() // ‡¶è‡¶ü‡¶ø ‡¶°‡ßá‡¶ü‡¶æ ‡¶§‡ßà‡¶∞‡¶ø‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡ßá
    });
    
    // ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶´‡¶ø‡¶≤‡ßç‡¶° ‡¶ñ‡¶æ‡¶≤‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶®
    document.getElementById("newUserId").value = "";
    document.getElementById("newUserName").value = "";
  } catch (error) {
    console.error("Error creating user: ", error);
    alert("Failed to create user. Check console for details.");
  }
}

// ‡¶ì‡ßü‡¶æ‡¶∂ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶¨‡¶æ‡ßú‡¶æ‡¶®‡ßã‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
async function incrementWash(id) {
  const newCount = ((allUsers[id].count || 0) % 5) + 1;
  try {
    await update(ref(db, 'users/' + id), {
      count: newCount
    });
  } catch (error) {
    console.error("Error updating wash count: ", error);
    alert("Failed to update wash count.");
  }
}

// ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
async function deleteUser(id) {
  if (confirm("Are you sure you want to delete this user?")) {
    try {
      await remove(ref(db, 'users/' + id));
    } catch (error) {
      console.error("Error deleting user: ", error);
      alert("Failed to delete user.");
    }
  }
}

// HTML ‡¶•‡ßá‡¶ï‡ßá ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ó‡ßÅ‡¶≤‡ßã‡¶ï‡ßá window ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü‡ßá ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ
window.createUser = createUser;
window.incrementWash = incrementWash;
window.deleteUser = deleteUser;
window.renderUsers = renderUsers;
